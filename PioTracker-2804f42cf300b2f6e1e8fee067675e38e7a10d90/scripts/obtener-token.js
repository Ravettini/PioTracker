// Configuraci√≥n
const API_BASE_URL = 'http://localhost:3001/api/v1';

// Funci√≥n para obtener token de autenticaci√≥n
async function obtenerToken() {
  try {
    console.log('üîê Obteniendo token de autenticaci√≥n...');
    
    // Primero, intentar obtener un usuario admin existente
    const response = await fetch(`${API_BASE_URL}/auth/login`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email: 'admin@pio.gob.ar',
        password: 'admin123'
      })
    });

    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Token obtenido exitosamente');
      console.log(`üîë Token: ${data.access_token}`);
      return data.access_token;
    } else {
      console.log('‚ùå No se pudo obtener token autom√°ticamente');
      console.log('üìù Por favor, sigue estos pasos:');
      console.log('1. Ve a http://localhost:3000/login');
      console.log('2. Inicia sesi√≥n con tus credenciales');
      console.log('3. Abre las herramientas de desarrollador (F12)');
      console.log('4. Ve a la pesta√±a Network');
      console.log('5. Busca una petici√≥n a /auth/login');
      console.log('6. Copia el token del campo "access_token"');
      console.log('7. Reempl√°zalo en el archivo carga-masiva.js');
      return null;
    }
  } catch (error) {
    console.error('‚ùå Error obteniendo token:', error.message);
    return null;
  }
}

// Funci√≥n para probar la conexi√≥n
async function probarConexion(token) {
  try {
    console.log('\nüîç Probando conexi√≥n con la API...');
    
    const response = await fetch(`${API_BASE_URL}/catalogos/ministerios`, {
      headers: {
        'Authorization': `Bearer ${token}`
      }
    });

    if (response.ok) {
      const ministerios = await response.json();
      console.log('‚úÖ Conexi√≥n exitosa');
      console.log(`üìä Se encontraron ${ministerios.length} ministerios`);
      return true;
    } else {
      console.log('‚ùå Error de conexi√≥n:', response.status);
      return false;
    }
  } catch (error) {
    console.error('‚ùå Error de conexi√≥n:', error.message);
    return false;
  }
}

// Funci√≥n principal
async function main() {
  console.log('üöÄ Configurando carga masiva...\n');
  
  const token = await obtenerToken();
  
  if (token) {
    const conexionOk = await probarConexion(token);
    
    if (conexionOk) {
      console.log('\n‚úÖ ¬°Todo listo!');
      console.log('üìù Ahora puedes:');
      console.log('1. Crear tu archivo cargas.txt con el formato correcto');
      console.log('2. Reemplazar el AUTH_TOKEN en carga-masiva.js con el token obtenido');
      console.log('3. Ejecutar: node carga-masiva.js');
    } else {
      console.log('\n‚ùå No se pudo conectar con la API');
      console.log('üîß Verifica que el backend est√© ejecut√°ndose en http://localhost:3001');
    }
  }
}

// Ejecutar
if (require.main === module) {
  main();
}

module.exports = { obtenerToken, probarConexion };
