version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: pio-postgres
    environment:
      POSTGRES_DB: pio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d pio"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pio-network

  backend:
    build:
      context: ../server
      dockerfile: ../infra/Dockerfile.backend
    container_name: pio-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: pio
      JWT_SECRET: change-me-in-production
      WEB_ORIGIN: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pio-network

  frontend:
    build:
      context: ../frontend
      dockerfile: ../infra/Dockerfile.frontend
    container_name: pio-frontend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pio-network

volumes:
  postgres_data:

networks:
  pio-network:
    driver: bridge





